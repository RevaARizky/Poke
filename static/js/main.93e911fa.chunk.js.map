{"version":3,"sources":["reportWebVitals.js","Pokemon/PokemonCard.js","Pokemon/Pokemon.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PokemonCard","props","console","log","data","className","map","src","img","name","id","Pokemon","useState","pokemons","setPokemons","isLoading","setLoading","useEffect","arr","obj","axios","get","res","results","forEach","key","url","types","sprites","other","front_default","push","catch","error","sort","firstItem","secondItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sCCeCQ,EAnBK,SAACC,GAGjB,OAFAC,QAAQC,IAAIF,EAAMG,MAGd,qBAAKC,UAAU,YAAf,SACKJ,EAAMG,KAAKE,KAAI,SAAAF,GAAI,OACZ,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKE,IAAKH,EAAKI,IAAKH,UAAU,iBAElC,qBAAKA,UAAU,YAAf,SACI,oBAAIA,UAAU,YAAd,SAA2BD,EAAKK,WALbL,EAAKM,UCqCrCC,EA1CC,WACZ,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KAwBA,OAtBAC,qBAAU,WACN,IAAIC,EAAM,GACNC,EAAM,GACVC,IAAMC,IAAI,sCACT3B,MAAK,SAAA4B,GACcA,EAAIlB,KAAKmB,QACjBC,SAAQ,SAASC,GACrBL,IAAMC,IAAII,EAAIC,KACbhC,MAAK,SAAA4B,GACFH,EAAM,CAAC,KAASG,EAAIlB,KAAKK,KAAM,MAAUa,EAAIlB,KAAKuB,MAAO,GAAOL,EAAIlB,KAAKM,GAAI,IAAOY,EAAIlB,KAAKwB,QAAQC,MAAM,oBAAoBC,eAC/HZ,EAAIa,KAAKZ,YAIpBa,OAAM,SAAAC,GAAU/B,QAAQC,IAAI8B,MAC7BjB,GAAW,GACXF,EAAYI,EAAIgB,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUzB,GAAK0B,EAAW1B,SAE3E,IACHR,QAAQC,IAAIU,GAEZX,QAAQC,WAAWU,GAChBE,EAEK,qBAAKL,GAAG,OAAR,SACI,8CAKR,qBAAKA,GAAG,OAAR,SACI,cAAC,EAAD,CAAaN,KAAMS,EAAnB,kBChCZwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BlD,M","file":"static/js/main.93e911fa.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './Pokemon.css'\n\nconst PokemonCard = (props) => {\n    console.log(props.data)\n    // console.log(props.data.map(data => console.log(data)))\n    return(\n        <div className=\"container\">\n            {props.data.map(data => \n                    <div className=\"card\" key={data.id}>\n                        <div className=\"card-image\">\n                            <img src={data.img} className=\"poke-image\"></img>\n                        </div>\n                        <div className=\"card-name\">\n                            <h3 className=\"poke-name\">{data.name}</h3>\n                        </div>\n                    </div>\n            )}\n        </div>\n    )\n}\n\nexport default PokemonCard","import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport PokemonCard from './PokemonCard';\n\nconst Pokemon = () => {\n    const [pokemons, setPokemons] = useState()\n    const [isLoading, setLoading] = useState(true)\n    \n    useEffect(() => {\n        let arr = []\n        let obj = {}\n        axios.get('https://pokeapi.co/api/v2/pokemon/')\n        .then(res => {\n            const results = res.data.results;\n            results.forEach(function(key){\n                axios.get(key.url)\n                .then(res => {\n                    obj = {'name' : res.data.name, 'types' : res.data.types, 'id' : res.data.id, 'img': res.data.sprites.other['official-artwork'].front_default}\n                    arr.push(obj)\n                })\n            })\n        })\n        .catch(error => {console.log(error)})\n        setLoading(false)\n        setPokemons(arr.sort((firstItem, secondItem) => firstItem.id - secondItem.id))\n        // console.log({arr})\n    }, [])\n    console.log(pokemons)\n    \n    console.log(typeof pokemons)\n    if(isLoading) {\n        return(\n            <div id=\"poke\">\n                <h2>Loading...</h2>\n            </div>\n        )\n    }\n    return (\n        <div id=\"poke\">\n            <PokemonCard data={pokemons}> </PokemonCard>\n        </div>\n    )\n    \n    \n}\n\nexport default Pokemon;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n// import GetPokemon from './Pokemon/GetPokemon'\nimport Pokemon from './Pokemon/Pokemon'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Pokemon />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}