{"version":3,"sources":["reportWebVitals.js","Pokemon/PokemonCard.js","Pokemon/Pokemon.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PokemonCard","props","useState","isLoading","setLoading","poke","setPoke","useEffect","getState","window","localStorage","getItem","arr","obj","data","map","axios","get","url","res","name","id","img","sprites","other","front_default","push","JSON","stringify","length","setItem","parse","className","src","Pokemon","pokemons","setPokemons","results","console","log","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sCC4CCQ,EA9CK,SAACC,GACjB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,qBAAxB,mBAAOG,EAAP,KAAaC,EAAb,KAmBA,OAlBAC,qBAAU,WACN,IAAMC,EAAWC,OAAOC,aAAaC,QAAQ,SACzCC,EAAM,GACNC,EAAM,GACVZ,EAAMa,KAAKC,KAAI,SAAAD,GAAI,OACfE,IAAMC,IAAIH,EAAKI,KACdxB,MAAM,SAAAyB,GACHN,EAAM,CAACO,KAAMD,EAAIL,KAAKM,KAAMC,GAAIF,EAAIL,KAAKO,GAAIC,IAAKH,EAAIL,KAAKS,QAAQC,MAAM,oBAAoBC,eAC7Fb,EAAIc,KAAKb,GACNc,KAAKC,UAAUhB,GAAKiB,SAAWF,KAAKC,UAAUpB,GAAUqB,QACvDpB,OAAOC,aAAaoB,QAAQ,QAASH,KAAKC,UAAUhB,UAIhEN,EAAQqB,KAAKI,MAAMvB,IACnBJ,GAAW,KACZ,IAEAD,EAEK,qBAAKkB,GAAG,OAAR,SACI,8CAMR,qBAAKW,UAAU,iBAAf,SACK3B,EAAKU,KAAI,SAACD,GACP,OACI,sBAAmBkB,UAAU,OAA7B,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKC,IAAKnB,EAAKQ,IAAKU,UAAU,iBAElC,6BAAKlB,EAAKM,OACV,4BAAIN,EAAKO,OALHP,EAAKO,UCApBa,EAlCC,WACZ,MAAgChC,qBAAhC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACA,EAAgClC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OAdAG,qBAAU,WACN,IAAMC,EAAWC,OAAOC,aAAaC,QAAQ,QAC7CK,IAAMC,IAAI,sCACTvB,MAAK,SAAAyB,GACF,IAAMkB,EAAUlB,EAAIL,KAAKuB,QACtBV,KAAKC,UAAUS,KAAa7B,IAC3B8B,QAAQC,IAAI,iBACZ9B,OAAOC,aAAaoB,QAAQ,OAAQH,KAAKC,UAAUS,QAG1DG,OAAM,SAAAC,GAAUH,QAAQC,IAAIE,MAC7BL,EAAYT,KAAKI,MAAMvB,IACvBJ,GAAW,KACZ,IACAD,EAEK,qBAAKkB,GAAG,OAAR,SACI,8CAKR,qBAAKA,GAAG,OAAR,SACI,cAAC,EAAD,CAAaP,KAAMqB,OCxB/BO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BvD,M","file":"static/js/main.43ac3eee.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\nimport React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport './Pokemon.css'\n\nconst PokemonCard = (props) => {\n    const [isLoading, setLoading] = useState(true)\n    const [poke, setPoke] = useState()\n    useEffect(() => {\n        const getState = window.localStorage.getItem('pokes')\n        let arr = []\n        let obj = {}\n        props.data.map(data=> \n            axios.get(data.url)\n            .then( res => {\n                obj = {name: res.data.name, id: res.data.id, img: res.data.sprites.other['official-artwork'].front_default}\n                arr.push(obj)\n                if(JSON.stringify(arr).length !== JSON.stringify(getState).length){\n                    window.localStorage.setItem('pokes', JSON.stringify(arr))\n                }\n            })\n        )\n        setPoke(JSON.parse(getState))\n        setLoading(false)\n    }, [])\n\n    if(isLoading) {\n        return(\n            <div id=\"poke\">\n                <h2>Loading...</h2>\n            </div>\n        )\n    }\n    \n    return(\n        <div className=\"main-container\">\n            {poke.map((data) => {\n                return(\n                    <div key={data.id} className=\"card\">\n                        <div className=\"sprite-image\">\n                            <img src={data.img} className=\"poke-image\" />  \n                        </div>\n                        <h4>{data.name}</h4>\n                        <p>{data.id}</p>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default PokemonCard","import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport PokemonCard from './PokemonCard';\n\nconst Pokemon = () => {\n    const [pokemons, setPokemons] = useState()\n    const [isLoading, setLoading] = useState(true)\n    \n    useEffect(() => {\n        const getState = window.localStorage.getItem('data')\n        axios.get('https://pokeapi.co/api/v2/pokemon/')\n        .then(res => {\n            const results = res.data.results;\n            if(JSON.stringify(results) !== getState){\n                console.log('local not set')\n                window.localStorage.setItem('data', JSON.stringify(results))\n            }\n        })\n        .catch(error => {console.log(error)})\n        setPokemons(JSON.parse(getState))\n        setLoading(false)\n    }, [])\n    if(isLoading) {\n        return(\n            <div id=\"poke\">\n                <h2>Loading...</h2>\n            </div>\n        )\n    }\n    return ( \n        <div id=\"poke\">\n            <PokemonCard data={pokemons}/>\n        </div>\n    )\n    \n    \n}\n\nexport default Pokemon;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n// import GetPokemon from './Pokemon/GetPokemon'\nimport Pokemon from './Pokemon/Pokemon'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Pokemon />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}